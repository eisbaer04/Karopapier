(function(root,factory){"use strict";if(typeof exports!=="undefined"&&typeof module!=="undefined"&&module.exports){exports=module.exports=require("backbone");factory(require("underscore"),exports)}else if(typeof define==="function"&&define.amd){define(["underscore","backbone"],factory)}else{factory(root._,root.Backbone)}})(this,function(_,Backbone){"use strict";var methods={wipe:function(){if(_.isObject(this.constructor._cache)){delete this.constructor._cache[""+this.get(this.idAttribute)]}}};function checkId(model,value){var key=""+model.get(model.idAttribute);var cache=model.constructor._cache;if(_.has(cache,key)){throw new Error("model idAttribute attribute value already exists in cache")}else{cache[key]=model}}Backbone.ModelFactory=function(Base,prototype){var Model,cache;prototype=_.extend({},methods,_.isObject(Base)&&!_.isFunction(Base)?Base:_.isObject(prototype)?prototype:null);Base=_.isFunction(Base)?_.has(Base,"_Model")?Base._Model:Base:Backbone.Model;Model=Base.extend(prototype);function Constructor(attrs,options){attrs=_.isObject(attrs)?attrs:null;var idAttribute=Model.prototype.idAttribute;var hasId=attrs!==null&&_.has(attrs,idAttribute);var key=hasId&&""+attrs[idAttribute];var exists=key&&_.has(cache,key);var model=exists?cache[key]:new Model(attrs,options);model.constructor=Constructor;if(key&&!exists){cache[key]=model}else{model.set(options&&options.parse?model.parse(attrs,options):attrs,options)}if(!hasId){model.once("change:"+idAttribute,checkId)}return model}Constructor._Model=Model;cache=Constructor._cache={};Constructor.prototype=Model.prototype;Constructor.wipe=function(models){models=models instanceof Backbone.Collection?models.models:models;if(!models||_.isArray(models)){_.invoke(models||_.values(this._cache),"wipe")}else if(_.isObject(models)){models.wipe()}else{throw new Error("invalid argument")}};return Constructor};return Backbone});